language: scala
scala:
- 2.12.10

# Currently skip building on master. PR validation and release attempts are the gatekeepers for test validation.
# This is only necessary currently as sbt-sonatype doesn't track which staging repo it uses,
# so sonatypeClose and sonatypeRelease get confused if multiple builds are going on at the same time.
# Currently, the maximum concurrent builds is set to "1" to avoid this race condition.
#
# This means that during releases, when the release notes are pushed to master, that triggers a build.
# Travis doesn't know it's safe to do a relase build (tag build) at the same time as the safety net master build,
# so the release build is always delayed by a full test run unnecessarily.
branches:
  except:
    - master

script:
- sbt ++$TRAVIS_SCALA_VERSION clean compile

cache:
  directories:
    - $HOME/.cache

# Releasing configs taken from https://github.com/scalacenter/sbt-release-early/wiki/How-to-release-in-Travis-(CI)
before_install:
- if [ $TRAVIS_PULL_REQUEST = 'false' ] && [[ "$TRAVIS_TAG" = v* ]]; then
    openssl aes-256-cbc -K $encrypted_9eb262af688a_key -iv $encrypted_9eb262af688a_iv -in travis/secrets.tar.enc -out travis/local.secrets.tar -d;
    tar xv -C travis -f travis/local.secrets.tar;
  fi

# From https://github.com/jodersky/sbt-gpg,
before_script:
- if [ $TRAVIS_PULL_REQUEST = 'false' ] && [[ "$TRAVIS_TAG" = v* ]]; then
    gpg --import ./travis/local.secring.asc;
  fi

# after_success:
# - if [ $TRAVIS_PULL_REQUEST = 'false' ] && [[ "$TRAVIS_TAG" = v* ]]; then
#     sbt ++$TRAVIS_SCALA_VERSION clean publishBintray core/bintrayRelease bintrayRelease publishSonatype sonatypeBundleRelease;
#   fi
